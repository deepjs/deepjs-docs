<?xml version="1.0" encoding="utf-8"?>
<!-- Generator: Adobe Illustrator 15.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="496px"
	 height="593px" viewBox="0 0 496 593" enable-background="new 0 0 496 593" xml:space="preserve">
<g id="Layer_2">
	<rect fill="#393532" width="496" height="593"/>
</g>
<g id="Layer_6">
</g>
<g id="Layer_4">
	<line fill="none" stroke="#ABA79D" stroke-miterlimit="10" stroke-dasharray="4,4" x1="31.5" y1="262" x2="31.5" y2="497"/>
	<line fill="none" stroke="#ABA79D" stroke-miterlimit="10" stroke-dasharray="4,4" x1="468.5" y1="262" x2="468.5" y2="497"/>
	<line fill="none" stroke="#ABA79D" stroke-miterlimit="10" stroke-dasharray="4,4" x1="383.5" y1="262" x2="383.5" y2="497"/>
	<line fill="none" stroke="#ABA79D" stroke-miterlimit="10" stroke-dasharray="4,4" x1="250.5" y1="262" x2="250.5" y2="498"/>
	<line fill="none" stroke="#ABA79D" stroke-miterlimit="10" stroke-dasharray="4,4" x1="338.5" y1="262" x2="338.5" y2="497"/>
	<line fill="none" stroke="#ABA79D" stroke-miterlimit="10" stroke-dasharray="4,4" x1="163.5" y1="262" x2="163.5" y2="498"/>
	<line fill="none" stroke="#54534D" stroke-miterlimit="10" stroke-dasharray="2,2" x1="8" y1="341.5" x2="482" y2="341.5"/>
	<line fill="none" stroke="#54534D" stroke-miterlimit="10" stroke-dasharray="2,2" x1="8" y1="262.5" x2="482" y2="262.5"/>
	<line fill="none" stroke="#54534D" stroke-miterlimit="10" stroke-dasharray="2,2" x1="8" y1="444.5" x2="482" y2="444.5"/>
	<line fill="none" stroke="#54534D" stroke-miterlimit="10" stroke-dasharray="2,2" x1="8" y1="497.5" x2="482" y2="497.5"/>
</g>
<g id="Layer_5">
	<path fill="#2BB2D0" d="M116,325.514c0,3.582-2.904,6.486-6.486,6.486H83.486c-3.582,0-6.486-2.904-6.486-6.486v-4.028
		c0-3.582,2.904-6.486,6.486-6.486h26.028c3.582,0,6.486,2.904,6.486,6.486V325.514z"/>
	<path fill="#64CCE6" d="M205,303.514c0,3.582-2.904,6.486-6.485,6.486h-26.029c-3.582,0-6.485-2.904-6.485-6.486v-4.028
		c0-3.582,2.904-6.486,6.485-6.486h26.029c3.582,0,6.485,2.904,6.485,6.486V303.514z"/>
	<path fill="#64CCE6" stroke="#FFAF0F" stroke-width="2" stroke-miterlimit="10" d="M247,303.514c0,3.582-2.904,6.486-6.485,6.486
		h-26.029c-3.582,0-6.485-2.904-6.485-6.486v-4.028c0-3.582,2.904-6.486,6.485-6.486h26.029c3.582,0,6.485,2.904,6.485,6.486
		V303.514z"/>
	<path fill="#2BB2D0" d="M425,325.514c0,3.582-2.903,6.486-6.485,6.486h-26.029c-3.582,0-6.485-2.904-6.485-6.486v-4.028
		c0-3.582,2.903-6.486,6.485-6.486h26.029c3.582,0,6.485,2.904,6.485,6.486V325.514z"/>
	<path fill="#2BB2D0" d="M468,325.514c0,3.582-2.903,6.486-6.484,6.486h-26.031c-3.581,0-6.484-2.904-6.484-6.486v-4.028
		c0-3.582,2.903-6.486,6.484-6.486h26.031c3.581,0,6.484,2.904,6.484,6.486V325.514z"/>
	<path fill="#2BB2D0" stroke="#FFAF0F" stroke-width="2" stroke-miterlimit="10" d="M71,325.514c0,3.582-2.904,6.486-6.486,6.486
		H38.486c-3.582,0-6.486-2.904-6.486-6.486v-4.028c0-3.582,2.904-6.486,6.486-6.486h26.028c3.582,0,6.486,2.904,6.486,6.486V325.514
		z"/>
	<path fill="#2BB2D0" stroke="#FFAF0F" stroke-width="2" stroke-miterlimit="10" d="M160,325.514c0,3.582-2.903,6.486-6.485,6.486
		h-26.03c-3.582,0-6.485-2.904-6.485-6.486v-4.028c0-3.582,2.903-6.486,6.485-6.486h26.03c3.582,0,6.485,2.904,6.485,6.486V325.514z
		"/>
	<path fill="#A6E2F2" d="M293,282.515c0,3.582-2.904,6.485-6.486,6.485h-26.028c-3.582,0-6.486-2.904-6.486-6.485v-4.029
		c0-3.582,2.904-6.485,6.486-6.485h26.028c3.582,0,6.486,2.904,6.486,6.485V282.515z"/>
	<path fill="#A6E2F2" stroke="#FFAF0F" stroke-width="2" stroke-miterlimit="10" d="M336,282.515c0,3.582-2.903,6.485-6.485,6.485
		h-26.03c-3.582,0-6.485-2.904-6.485-6.485v-4.029c0-3.582,2.903-6.485,6.485-6.485h26.03c3.582,0,6.485,2.904,6.485,6.485V282.515z
		"/>
	<path fill="#64CCE6" stroke="#FFAF0F" stroke-width="2" stroke-miterlimit="10" d="M381,303.514c0,3.582-2.903,6.486-6.485,6.486
		h-26.029c-3.582,0-6.485-2.904-6.485-6.486v-4.028c0-3.582,2.903-6.486,6.485-6.486h26.029c3.582,0,6.485,2.904,6.485,6.486
		V303.514z"/>
</g>
<g id="Layer_1">
	<g>
		<path fill="none" stroke="#FFFFFF" stroke-width="0.88" stroke-miterlimit="10" d="M201.491,301.698
			c4.774-2.613,6.781-4.774,13.537,0.541"/>
		<polygon fill="#FFFFFF" stroke="#FFFFFF" stroke-width="0.88" stroke-miterlimit="10" points="214.375,301.752 210.565,302.572 
			212.151,298.551 214.375,301.752 		"/>
	</g>
	<path fill="#2BB2D0" d="M164,433H42.761c-5.833,0-10.561-4.607-10.561-10.44l0,0c0-5.832,4.728-10.56,9.681-9.56H164"/>
	<path fill="#2BB2D0" d="M384,413h72.775c6.712-1,11.441,3.728,11.441,9.56l0,0c0,5.833-4.729,10.44-10.561,10.44H384"/>
	<line fill="none" stroke="#969696" stroke-miterlimit="10" stroke-dasharray="3,3" x1="384" y1="432.5" x2="164" y2="432.5"/>
	<line fill="none" stroke="#969696" stroke-miterlimit="10" stroke-dasharray="3,3" x1="164" y1="412.5" x2="384" y2="412.5"/>
	<line fill="none" stroke="#969696" stroke-miterlimit="10" stroke-dasharray="3,3" x1="251" y1="386.5" x2="338" y2="386.5"/>
	<path fill="#64CCE6" d="M251,408h-77.154c-5.832,0-10.561-5.168-10.561-11l0,0c0-5.833,4.729-11,10.561-11H251"/>
	<line fill="none" stroke="#969696" stroke-miterlimit="10" stroke-dasharray="3,3" x1="338" y1="407.5" x2="255" y2="407.5"/>
	<path fill="#64CCE6" d="M338,386h35.014c5.831,0,10.56,5.167,10.56,11l0,0c0,5.832-4.729,11-10.56,11H338"/>
	<path fill="#A6E2F2" d="M339,369.539c0,5.777-4.684,10.461-10.461,10.461h-68.078c-5.777,0-10.461-4.684-10.461-10.461v-0.078
		c0-5.777,4.684-10.461,10.461-10.461h68.078c5.777,0,10.461,4.684,10.461,10.461V369.539z"/>
	<path fill="#ABC406" d="M468,476.539c0,5.777-4.684,10.461-10.461,10.461H42.461C36.684,487,32,482.316,32,476.539v-0.078
		C32,470.684,36.684,466,42.461,466h415.078c5.777,0,10.461,4.684,10.461,10.461V476.539z"/>
	<g>
		<path fill="none" stroke="#FFFFFF" stroke-width="0.88" stroke-miterlimit="10" d="M421.233,322.556
			c4.774-2.612,6.783-4.773,13.538,0.541"/>
		<polygon fill="#FFFFFF" stroke="#FFFFFF" stroke-width="0.88" stroke-miterlimit="10" points="434.118,322.611 430.309,323.431 
			431.896,319.41 434.118,322.611 		"/>
	</g>
	<text transform="matrix(1 0 0 1 60.4561 411.1641)" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="10">local to FS identity</text>
	<text transform="matrix(1 0 0 1 170.9404 383.8833)" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="10">local to Restful id.</text>
	<text transform="matrix(1 0 0 1 255.7432 356.6025)" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="10">local to deep chain</text>
	<text transform="matrix(1 0 0 1 36.6948 461.8525)" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="10">“state” shared between different identities</text>
	<text transform="matrix(1 0 0 1 41.9746 426.125)" fill="#1A1917" font-family="'MyriadPro-Regular'" font-size="10">• cwd</text>
	<text transform="matrix(1 0 0 1 173.9399 399.7241)" fill="#1A1917" font-family="'MyriadPro-Regular'" font-size="10">• store</text>
	<text transform="matrix(1 0 0 1 290.0483 372.0049)" fill="#1A1917" font-family="'MyriadPro-Regular'" font-size="10">• ...</text>
	<text transform="matrix(1 0 0 1 416.1084 254.6147)" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="12">chain’s end</text>
	<text transform="matrix(1 0 0 1 21.5 256.6147)" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="12">chain’s start</text>
	<text transform="matrix(1 0 0 1 43.7354 479.0117)" fill="#FFFFFF" font-family="'MyriadPro-Regular'" font-size="10">• success</text>
	<text transform="matrix(1 0 0 1 99.6108 478.9268)" fill="#FFFFFF" font-family="'MyriadPro-Regular'" font-size="10">• error</text>
	<text transform="matrix(1 0 0 1 141.8525 479.8066)" fill="#FFFFFF" font-family="'MyriadPro-Regular'" font-size="10">• identities stack</text>
	<text transform="matrix(1 0 0 1 39 73.5947)"><tspan x="0" y="0" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="12">deep.</tspan><tspan x="28.103" y="0" fill="#FFAF0F" font-family="'MyriadPro-Regular'" font-size="12">fs</tspan><tspan x="36.359" y="0" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="12">(</tspan><tspan x="39.767" y="0" fill="#64CCE6" font-family="'MyriadPro-Regular'" font-size="12">”/ home/myuser”</tspan><tspan x="125.264" y="0" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="12">)</tspan><tspan x="128.672" y="0" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="12" letter-spacing="12">	</tspan><tspan x="143.998" y="0" fill="#99968C" font-family="'MyriadPro-Regular'" font-size="12">// FS chain API, place cwd in ‘locals’</tspan><tspan x="0" y="16" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="12">.from(</tspan><tspan x="29.915" y="16" fill="#64CCE6" font-family="'MyriadPro-Regular'" font-size="12">”./pathto/myfile.json”</tspan><tspan x="137.108" y="16" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="12">)</tspan><tspan x="140.517" y="16" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="12">	</tspan><tspan x="143.999" y="16" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="12" letter-spacing="33">	</tspan><tspan x="179.999" y="16" fill="#99968C" font-family="'MyriadPro-Regular'" font-size="12">// read a json file</tspan><tspan x="0" y="32" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="12">.</tspan><tspan x="2.484" y="32" fill="#FFAF0F" font-family="'MyriadPro-Regular'" font-size="12">rest</tspan><tspan x="21.144" y="32" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="12">(</tspan><tspan x="24.552" y="32" fill="#64CCE6" font-family="'MyriadPro-Regular'" font-size="12">”mystore”</tspan><tspan x="73.955" y="32" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="12">)</tspan><tspan x="77.363" y="32" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="12" letter-spacing="28">	</tspan><tspan x="108" y="32" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="12" letter-spacing="33">	</tspan><tspan x="144" y="32" fill="#99968C" font-family="'MyriadPro-Regular'" font-size="12">// Restful chain API, place retrieved store in ‘locals’</tspan><tspan x="0" y="48" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="12">.post()</tspan><tspan x="31.439" y="48" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="12" letter-spacing="2">	</tspan><tspan x="36" y="48" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="12" letter-spacing="33">				</tspan><tspan x="180" y="48" fill="#99968C" font-family="'MyriadPro-Regular'" font-size="12">// post the result from “myfile.json” to “mystore”</tspan><tspan x="0" y="64" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="12">.</tspan><tspan x="2.484" y="64" fill="#FFAF0F" font-family="'MyriadPro-Regular'" font-size="12">deep</tspan><tspan x="28.103" y="64" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="12">()</tspan><tspan x="34.919" y="64" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="12" letter-spacing="-1">	</tspan><tspan x="36" y="64" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="12" letter-spacing="33">			</tspan><tspan x="144" y="64" fill="#99968C" font-family="'MyriadPro-Regular'" font-size="12">// deep chain API</tspan><tspan x="0" y="80" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="12">.query(</tspan><tspan x="34.847" y="80" fill="#64CCE6" font-family="'MyriadPro-Regular'" font-size="12">”.//?street&amp;zip”</tspan><tspan x="109.604" y="80" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="12">)</tspan><tspan x="113.013" y="80" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="12" letter-spacing="28">	</tspan><tspan x="143.999" y="80" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="12" letter-spacing="33">	</tspan><tspan x="179.999" y="80" fill="#99968C" font-family="'MyriadPro-Regular'" font-size="12">// select all adresses found in post result</tspan><tspan x="0" y="96" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="12">.</tspan><tspan x="2.484" y="96" fill="#FFAF0F" font-family="'MyriadPro-Regular'" font-size="12">close</tspan><tspan x="28.043" y="96" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="12">()</tspan><tspan x="34.859" y="96" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="12" letter-spacing="-1">	</tspan><tspan x="36" y="96" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="12" letter-spacing="33">			</tspan><tspan x="144" y="96" fill="#99968C" font-family="'MyriadPro-Regular'" font-size="12">// close deep chain, back to Restful API</tspan><tspan x="0" y="112" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="12">.</tspan><tspan x="2.484" y="112" fill="#FFAF0F" font-family="'MyriadPro-Regular'" font-size="12">close</tspan><tspan x="28.043" y="112" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="12">()</tspan><tspan x="34.859" y="112" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="12" letter-spacing="-1">	</tspan><tspan x="36" y="112" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="12" letter-spacing="33">			</tspan><tspan x="144" y="112" fill="#99968C" font-family="'MyriadPro-Regular'" font-size="12">// close Restful chain, back to fs API</tspan><tspan x="0" y="128" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="12">.to(</tspan><tspan x="16.452" y="128" fill="#64CCE6" font-family="'MyriadPro-Regular'" font-size="12">”./datas/adresses.json”</tspan><tspan x="128.878" y="128" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="12">)</tspan><tspan x="132.286" y="128" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="12" letter-spacing="9">	</tspan><tspan x="144" y="128" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="12" letter-spacing="33">	</tspan><tspan x="180" y="128" fill="#99968C" font-family="'MyriadPro-Regular'" font-size="12">// write adresses to files</tspan><tspan x="0" y="144" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="12">.log();</tspan><tspan x="27.912" y="144" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="12" letter-spacing="5">	</tspan><tspan x="36" y="144" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="12" letter-spacing="33">				</tspan><tspan x="180" y="144" fill="#99968C" font-family="'MyriadPro-Regular'" font-size="12">// print final success or any error from any handlers</tspan></text>
	<g>
		<path fill="none" stroke="#FFFFFF" stroke-width="0.88" stroke-miterlimit="10" d="M66.789,323.315
			c4.774-2.612,8.782-4.774,15.537,0.541"/>
		<polygon fill="#FFFFFF" stroke="#FFFFFF" stroke-width="0.88" stroke-miterlimit="10" points="81.672,323.37 77.862,324.19 
			79.45,320.169 81.672,323.37 		"/>
	</g>
	<g>
		<path fill="none" stroke="#FFFFFF" stroke-width="0.88" stroke-miterlimit="10" d="M114.131,323.315
			c4.774-2.612,7.781-4.774,14.537,0.541"/>
		<polygon fill="#FFFFFF" stroke="#FFFFFF" stroke-width="0.88" stroke-miterlimit="10" points="128.015,323.37 124.205,324.19 
			125.792,320.169 128.015,323.37 		"/>
	</g>
	<g>
		<path fill="none" stroke="#FFFFFF" stroke-width="0.88" stroke-miterlimit="10" d="M159.473,323.315
			c6.215,0-2.568-23.264,12.775-21.016"/>
		<polygon fill="#FFFFFF" stroke="#FFFFFF" stroke-width="0.88" stroke-miterlimit="10" points="171.456,302.112 168.281,304.372 
			168.148,300.051 171.456,302.112 		"/>
	</g>
	<g>
		<path fill="none" stroke="#FFFFFF" stroke-width="0.88" stroke-miterlimit="10" d="M288.272,280.08
			c4.774-2.611,7.781-4.773,14.536,0.541"/>
		<polygon fill="#FFFFFF" stroke="#FFFFFF" stroke-width="0.88" stroke-miterlimit="10" points="302.155,280.135 298.345,280.955 
			299.933,276.934 302.155,280.135 		"/>
	</g>
	<g>
		<path fill="none" stroke="#FFFFFF" stroke-width="0.88" stroke-miterlimit="10" d="M247.134,301.698
			c6.215,0-0.134-21.888,12.775-21.016"/>
		<polygon fill="#FFFFFF" stroke="#FFFFFF" stroke-width="0.88" stroke-miterlimit="10" points="259.116,280.494 255.943,282.755 
			255.808,278.433 259.116,280.494 		"/>
	</g>
	<g>
		<path fill="none" stroke="#FFFFFF" stroke-width="0.88" stroke-miterlimit="10" d="M335.013,279.81
			c6.216,0-1.568,23.265,13.776,21.015"/>
		<polygon fill="#FFFFFF" stroke="#FFFFFF" stroke-width="0.88" stroke-miterlimit="10" points="347.996,301.013 344.821,298.752 
			344.688,303.074 347.996,301.013 		"/>
	</g>
	<g>
		<path fill="none" stroke="#FFFFFF" stroke-width="0.88" stroke-miterlimit="10" d="M380.694,300.668
			c6.216,0-1.566,23.264,13.775,21.016"/>
		<polygon fill="#FFFFFF" stroke="#FFFFFF" stroke-width="0.88" stroke-miterlimit="10" points="393.678,321.871 390.505,319.611 
			390.37,323.932 393.678,321.871 		"/>
	</g>
	<polyline fill="none" stroke="#FFFFFF" stroke-miterlimit="10" stroke-dasharray="1.7601,1.7601" points="27,267.5 19.5,267.5 
		19.5,335.5 27,335.5 	"/>
	<polyline fill="none" stroke="#FFFFFF" stroke-miterlimit="10" stroke-dasharray="2,2" points="30,55.5 21.5,55.5 21.5,227.5 
		30,227.5 	"/>
	<polyline fill="none" stroke="#FFFFFF" stroke-miterlimit="10" stroke-dasharray="1.7601,1.7601" points="27,350.5 19.5,350.5 
		19.5,438.5 27,438.5 	"/>
	<polyline fill="none" stroke="#FFFFFF" stroke-miterlimit="10" stroke-dasharray="1.7601,1.7601" points="27,449.5 19.5,449.5 
		19.5,491.5 27,491.5 	"/>
	<g>
		<text transform="matrix(1 0 0 1 18 548)" fill="#FFFFFF" font-family="'MyriadPro-Regular'" font-size="11">2. chain’s handlers (      = identity changes)</text>
		<text transform="matrix(1 0 0 1 18 531)" fill="#FFFFFF" font-family="'MyriadPro-Regular'" font-size="11">1. single sentence using 3 chain’s identites</text>
		<text transform="matrix(1 0 0 1 18 564)" fill="#FFFFFF" font-family="'MyriadPro-Regular'" font-size="11">3. locals variables belonging to current identity</text>
		<text transform="matrix(1 0 0 1 18 580)" fill="#FFFFFF" font-family="'MyriadPro-Regular'" font-size="11">4. common state’s variables shared by identities</text>
	</g>
	<text transform="matrix(1 0 0 1 227.7861 479.8066)" fill="#FFFFFF" font-family="'MyriadPro-Regular'" font-size="10">• ...</text>
	<g>
		<text transform="matrix(1 0 0 1 117.1099 31.541)" fill="#E3DED0" font-family="'MyriadPro-Regular'" font-size="20">“Chain’s identities stack” by image</text>
	</g>
	<circle fill="none" stroke="#FFAF0F" stroke-width="2" stroke-miterlimit="10" cx="112.125" cy="544.844" r="4.125"/>
</g>
<g id="Layer_3">
	<text transform="matrix(1 0 0 1 83.625 326.9473)" font-family="'MyriadPro-Regular'" font-size="10">.from()</text>
	<text transform="matrix(1 0 0 1 304.1084 283.5918)" font-family="'MyriadPro-Regular'" font-size="10">.close()</text>
	<text transform="matrix(1 0 0 1 35.7197 326.8267)" font-family="'MyriadPro-Regular'" font-size="10">deep.fs</text>
	<text transform="matrix(1 0 0 1 131.3071 326.9473)" font-family="'MyriadPro-Regular'" font-size="10">.rest()</text>
	<text transform="matrix(1 0 0 1 174.0078 305.209)" font-family="'MyriadPro-Regular'" font-size="10">.post()</text>
	<text transform="matrix(1 0 0 1 216.5356 305.2515)" font-family="'MyriadPro-Regular'" font-size="10">.deep()</text>
	<text transform="matrix(1 0 0 1 259.0283 283.5918)" font-family="'MyriadPro-Regular'" font-size="10">.query()</text>
	<text transform="matrix(1 0 0 1 349.3906 304.7124)" font-family="'MyriadPro-Regular'" font-size="10">.close()</text>
	<text transform="matrix(1 0 0 1 439.2012 326.0674)" font-family="'MyriadPro-Regular'" font-size="10">.log()</text>
	<text transform="matrix(1 0 0 1 397.9893 325.9468)" font-family="'MyriadPro-Regular'" font-size="10">.to()</text>
	<text transform="matrix(1 0 0 1 8.3833 276.6719)" fill="#FFFFFF" font-family="'MyriadPro-Regular'" font-size="16.1042">2</text>
	<text transform="matrix(1 0 0 1 8.4365 66.6729)" fill="#FFFFFF" font-family="'MyriadPro-Regular'" font-size="18.2997">1</text>
	<text transform="matrix(1 0 0 1 8.3833 360.2749)" fill="#FFFFFF" font-family="'MyriadPro-Regular'" font-size="16.1042">3</text>
	<text transform="matrix(1 0 0 1 8.3833 459.7178)" fill="#FFFFFF" font-family="'MyriadPro-Regular'" font-size="16.1042">4</text>
</g>
</svg>
